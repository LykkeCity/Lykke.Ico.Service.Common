// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.IcoCommon.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SmtpSettings
    {
        /// <summary>
        /// Initializes a new instance of the SmtpSettings class.
        /// </summary>
        public SmtpSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SmtpSettings class.
        /// </summary>
        public SmtpSettings(int port, string host = default(string), string localDomain = default(string), string login = default(string), string password = default(string), string displayName = default(string), string fromProperty = default(string))
        {
            Host = host;
            Port = port;
            LocalDomain = localDomain;
            Login = login;
            Password = password;
            DisplayName = displayName;
            FromProperty = fromProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "localDomain")]
        public string LocalDomain { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "login")]
        public string Login { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public string FromProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
