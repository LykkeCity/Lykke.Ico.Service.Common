// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.IcoCommon.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EmailTemplateHistoryItemModel
    {
        /// <summary>
        /// Initializes a new instance of the EmailTemplateHistoryItemModel
        /// class.
        /// </summary>
        public EmailTemplateHistoryItemModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EmailTemplateHistoryItemModel
        /// class.
        /// </summary>
        public EmailTemplateHistoryItemModel(System.DateTime changedUtc, bool isLayout, string username = default(string), string campaignId = default(string), string templateId = default(string), string body = default(string), string subject = default(string))
        {
            ChangedUtc = changedUtc;
            Username = username;
            CampaignId = campaignId;
            TemplateId = templateId;
            Body = body;
            Subject = subject;
            IsLayout = isLayout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "changedUtc")]
        public System.DateTime ChangedUtc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "campaignId")]
        public string CampaignId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "templateId")]
        public string TemplateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public string Body { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLayout")]
        public bool IsLayout { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
